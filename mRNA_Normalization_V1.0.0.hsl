 namespace _Method { #include "HSLSeqLib.hsl" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
#include "mRNA_Normalization_V1.0.0.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable loopCounter1;
variable mRNA_Vol;
sequence Seq_mRNA_Source;
variable arr_mRNA_vol[];
variable Des_Labware_ID;
variable loopCounter2;
variable Des_Pos_ID;
sequence Seq_mRNA_Destination;
dialog customDialogEF904F19B1E54c8288088F58177E7522;
variable Worklist_File;
global device ML_STAR ("mRNA_Normalization_V1.0.0.lay", "ML_STAR", hslTrue);
variable Source_Labware_ID_Water;
variable Source_Pos_ID_Water;
variable Source_Pos_ID_mRNA;
variable Source_Labware_ID_mRNA;
variable Water_Vol;
file file1;
variable arr_Water_vol[];
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "c685364e_d69a_412a_a531266d94cd5814" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("##################################\nmRNA Normalization\nv1.0.0\nThis is a method to normalize up to 1ml of RNA to desired concentration based on worklist where RNA and water volumes are defined\n\n#################################\n"));
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 2 1 0 "486bd20b_33ae_428c_ba59787229ed9566" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Worklist_File = Translate("");
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 3 1 0 "db9b99f8_51dd_4f37_ac968d481e1e2b27" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialogEF904F19B1E54c8288088F58177E7522.InitCustomDialog( "db9b99f8_51dd_4f37_ac968d481e1e2b27" );
customDialogEF904F19B1E54c8288088F58177E7522.ShowCustomDialog();
// }} ""
// {{ 4 1 0 "01a914a6_0099_4598_a917faa6774831db" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arr_mRNA_vol.SetSize(0);
// }} ""
// {{ 5 1 0 "679f95fd_8570_4f26_ac64d8fbd97fb1bc" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arr_Water_vol.SetSize(0);
// }} ""
// {{ 6 1 0 "f55182d8_1b5f_4497_808cc9148a4afa7c" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file1.SetExtendedProperties( "IMEX=1");
file1.AddField("Source_Labware_ID_mRNA", Source_Labware_ID_mRNA, hslString, 255);
file1.AddField("Source_Pos_ID_mRNA", Source_Pos_ID_mRNA, hslString, 255);
file1.AddField("mRNA_Vol", mRNA_Vol, hslFloat);
file1.AddField("Source_Labware_ID_Water", Source_Labware_ID_Water, hslString, 255);
file1.AddField("Source_Pos_ID_Water", Source_Pos_ID_Water, hslString, 255);
file1.AddField("Water_Vol", Water_Vol, hslFloat);
file1.AddField("Des_Labware_ID", Des_Labware_ID, hslString, 255);
file1.AddField("Des_Pos_ID", Des_Pos_ID, hslString, 255);
if( 0 == file1.Open("C:\\Users\\msheff\\OneDrive - Greenlight Biosciences\\Desktop\\Normalization worklist MAS test2.xls" + " " + "Sheet1$", hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Users\\msheff\\OneDrive - Greenlight Biosciences\\Desktop\\Normalization worklist MAS test2.xls", "HxMetEdCompCmd");
}
// }} ""
// {{ 7 1 0 "36574186_afec_4516_a27488c18cdc3ced" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (
   (file1.Eof() == 0)
)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 8 1 0 "b0942a93_7cb3_44a3_b9d59b7643644728" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file1.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 9 1 0 "0f0b616b_4832_4d2f_bce2188ebd7d5b5f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
SeqAdd(Seq_mRNA_Source, Source_Labware_ID_mRNA, Source_Pos_ID_mRNA);
// }} ""
// {{{ 10 1 0 "08ebd9c2_30e4_4f3f_9e6e8788eca17bcd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
SeqAdd(Seq_mRNA_Destination, Des_Labware_ID, Des_Pos_ID);
// }} ""
// {{ 11 1 0 "7d4ebddf_9c62_4947_840b52ba2f876063" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_mRNA_vol.AddAsLast(mRNA_Vol);
// }} ""
// {{ 12 1 0 "36574186_afec_4516_a27488c18cdc3ced" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 13 1 0 "7f172cff_5fbe_4787_b8399d618c59756c" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file1.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file1.RemoveFields();
// }} ""
// {{{ 14 1 0 "3886eca6_6c80_4841_b772e138821e91f1" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTraceSequence(Seq_mRNA_Source);
// }} ""
// {{{ 15 1 0 "9741cd2a_1864_43d5_8050f110f1fea2ad" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTraceSequence(Seq_mRNA_Destination);
// }} ""
// {{{ 16 1 0 "59a59947_1dd7_485d_9dd6a2a441a2e808" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("Arr_volumes"), arr_mRNA_vol.ElementAt( 1 -1));
// }} ""
// {{ 17 1 0 "f7fbac0b_4a10_43a5_abebb3ad72bcfda2" "{B31F353A-5D80-11d4-A5EB-0050DA737D89}"
Seq_mRNA_Source.SetCurrentPosition(1);
// }} ""
// {{ 18 1 0 "03623dff_16e5_44d4_ad61a1f6c8112e3b" "{B31F353C-5D80-11d4-A5EB-0050DA737D89}"
Seq_mRNA_Source.SetCount(100);
// }} ""
// {{ 19 1 0 "d3ae4238_cda0_4f97_9aa7a27373633555" "{B31F353A-5D80-11d4-A5EB-0050DA737D89}"
Seq_mRNA_Destination.SetCurrentPosition(1);
// }} ""
// {{ 20 1 0 "6b795289_8a0c_4ad6_ba3a230a7cb8044c" "{B31F353C-5D80-11d4-A5EB-0050DA737D89}"
Seq_mRNA_Destination.SetCount(100);
// }} ""
// {{ 21 1 0 "0bfb529e_32f7_4a42_b1c8249b7e6ab612" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("0bfb529e_32f7_4a42_b1c8249b7e6ab612"); // Initialize
}
// }} ""
// {{ 22 1 0 "f235d63c_4644_403a_82305c3ad246605f" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter2 = 0;
while (
   (Seq_mRNA_Source.GetCurrentPosition() > 0)
)
{
AlignSequences(hslTrue, Seq_mRNA_Source, 1);
loopCounter2 = loopCounter2 + 1;
// }} ""
// {{ 23 1 0 "1c84bac3_7765_4e1c_91e9354e165bfbc2" "ML_STAR:{541143FA-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FA_7FA2_11D3_AD85_0004ACB1DCB2("1c84bac3_7765_4e1c_91e9354e165bfbc2"); // TipPickUp
}
// }} ""
// {{ 24 1 0 "6ecff96e_9cc0_4d82_b4db0bbd2a3bf15e" "ML_STAR:{541143F5-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143F5_7FA2_11D3_AD85_0004ACB1DCB2("6ecff96e_9cc0_4d82_b4db0bbd2a3bf15e"); // Aspirate
}
// }} ""
// {{ 25 1 0 "561148b8_2cac_4341_b5ed846a22bf11cc" "ML_STAR:{541143F8-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143F8_7FA2_11D3_AD85_0004ACB1DCB2("561148b8_2cac_4341_b5ed846a22bf11cc"); // Dispense
}
// }} ""
// {{ 26 1 0 "614d23e4_86b9_4051_bf9250eb5d864fe0" "ML_STAR:{541143FC-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FC_7FA2_11D3_AD85_0004ACB1DCB2("614d23e4_86b9_4051_bf9250eb5d864fe0"); // TipEject
}
// }} ""
// {{ 27 1 0 "84fe2af8_d2c7_48b5_94e4c2509cf26e82" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
loopCounter2 = loopCounter2 + 7;
// }} ""
// {{ 28 1 0 "f235d63c_4644_403a_82305c3ad246605f" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
if (
   (Seq_mRNA_Source.GetCurrentPosition() > 0 && Seq_mRNA_Source.GetMax() == 0 )
)
{ MECC::EndlessSequenceLoopWarning(GetFileName()); }

}
Seq_mRNA_Source.SetMax(Seq_mRNA_Source.GetTotal());
}
// }} ""
// {{ 2 "AutoExitBlock" ""
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=msheff$$valid=0$$time=2023-04-06 13:05$$checksum=968b67a8$$length=085$$